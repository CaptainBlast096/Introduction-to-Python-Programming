from functools import reduce

class BankError(Exception):
    """Used for raising errors relating to the operations of the bank."""

class Bank:
    """Used for managing several savings accounts."""

    def __init__(self):
        """Constructs the initial list of accounts."""
        self.accounts = []

    def addAccount(self, account):
        """Adds a new account to the list of accounts."""
        self.accounts.append(account)

    def computeInterest(self):
        """Computes the interest for every account."""
        for account in self.accounts:
            account.computeInterest()

    def __str__(self):
        """Outputs the information associated with each account on a separate line."""
        accountStrings = map(lambda account: "\t" + str(account), self.accounts)
        accountsString = reduce(lambda account1, account2: account1 + "\n" + account2, accountStrings)
        return "Bank(\n" + accountsString + "\n)"

class SavingsAccount:
    """A single account, that has a balance, a name, and a pin number."""

    # A default interest rate used for when interest is not specified.
    DEFAULT_INTEREST_RATE = .05

    def __init__(self, name, pin, balance = 0.0):
        """Constructs the savings account."""
        if balance < 0:
            raise BankError()
        self.name = name
        self.pin = pin
        self.balance = balance

    # Getters
    def getName(self):
        return self.name
    def getPin(self):
        return self.pin
    def getBalance(self):
        return self.balance

    # Mutators
    def deposit(self, amount):
        if amount < 0:
            raise BankError()
        self.balance += amount
    def withdraw(self, amount):
        if self.getBalance() - amount < 0 or amount < 0:
            raise BankError()
        self.balance -= amount

    def computeInterest(self):
        """Calculates the interest and increases the balance by the interest."""
        interest = self.getBalance() * SavingsAccount.DEFAULT_INTEREST_RATE
        self.deposit(interest)

    def __str__(self):
        return f"Name: {self.getName():10} PIN: {self.getPin():6} Balance: {self.getBalance():8.2f}"


def setupBank():
    """Sets up the bank for the use in the demonstration of interest calculation."""
    account1 = SavingsAccount("Account1", "1234", 100)
    account2 = SavingsAccount("Account2", "2345", 1000)

    bank = Bank()
    bank.addAccount(account1)
    bank.addAccount(account2)

    return bank

def main():
    """Demonstrates the effect of interest calculation."""
    bank = setupBank()

    for i in range(6):
        print(bank)
        bank.computeInterest()

if __name__ == '__main__':
    main()
